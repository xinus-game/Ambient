name: Deploy examples

on:
  workflow_dispatch:
  schedule:
    # 5am UTC on Monday
    - cron: '0 5 * * 1'

env:
  CARGO_TERM_COLOR: always
  CACHE_KEY: ambient-${{ github.sha }}

jobs:
  build-ambient:
    runs-on: ubuntu-20.04
    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y tree libasound2-dev libglib2.0-dev libxcb-shape0-dev libxcb-xfixes0-dev \
            libcairo-dev libgtk2.0-dev libsoup2.4-dev libgtk-3-dev libwebkit2gtk-4.0-dev xorg-dev ninja-build libxcb-render0-dev
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Leafwing-Studios/cargo-cache@v1
        with:
          cache-group: "main"
      - name: Build
        run: cargo build --workspace --release
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0"
      - name: Cache ambient exectuable artifact
        uses: actions/cache/save@v3
        with:
          path: target/release/ambient
          key: ${{ env.CACHE_KEY }}

  discover-examples:
    runs-on: ubuntu-20.04
    outputs:
      examples: ${{ steps.discover.outputs.examples }}
    steps:
      - uses: actions/checkout@v3
      - name: Discover examples
        id: discover
        run: |
          set -e
          cd guest/rust/examples
          for example in $(find basics games ui -type d -and -mindepth 1 -and -maxdepth 1); do
            if [ -z "$EXAMPLES" ]; then
              EXAMPLES="\"$example\""
            else
              EXAMPLES="$EXAMPLES,\"$example\""
            fi
          done
          echo "examples=[${EXAMPLES}]" >> "$GITHUB_OUTPUT"

  deploy-example:
    needs: [build-ambient, discover-examples]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        example: ${{ fromJson(needs.discover-examples.outputs.examples) }}

    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y tree libasound2-dev libglib2.0-dev libxcb-shape0-dev libxcb-xfixes0-dev \
            libcairo-dev libgtk2.0-dev libsoup2.4-dev libgtk-3-dev libwebkit2gtk-4.0-dev xorg-dev ninja-build libxcb-render0-dev
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown,wasm32-wasi
      - name: Fetch ambient executable artifact from cache
        uses: actions/cache/restore@v3
        with:
          path: target/release/ambient
          key: ${{ env.CACHE_KEY }}
      - name: Deploy ${{ matrix.example }}
        run: target/release/ambient deploy --release --token ${{ secrets.AMBIENT_CLOUD_DEPLOY_TOKEN }} guest/rust/examples/${{ matrix.example }}
